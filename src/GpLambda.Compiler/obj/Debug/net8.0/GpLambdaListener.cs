//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/reinout/code/ryn-lang-v2/src/GpLambda.Compiler/Grammar/GpLambda.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace GpLambda.Compiler.Grammar {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GpLambdaParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IGpLambdaListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveType</c>
	/// labeled alternative in <see cref="GpLambdaParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveType([NotNull] GpLambdaParser.PrimitiveTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveType</c>
	/// labeled alternative in <see cref="GpLambdaParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveType([NotNull] GpLambdaParser.PrimitiveTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionType</c>
	/// labeled alternative in <see cref="GpLambdaParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionType([NotNull] GpLambdaParser.FunctionTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionType</c>
	/// labeled alternative in <see cref="GpLambdaParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionType([NotNull] GpLambdaParser.FunctionTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>PrimaryExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExpr([NotNull] GpLambdaParser.PrimaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimaryExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExpr([NotNull] GpLambdaParser.PrimaryExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>MethodCallExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCallExpr([NotNull] GpLambdaParser.MethodCallExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MethodCallExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCallExpr([NotNull] GpLambdaParser.MethodCallExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>CallExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallExpr([NotNull] GpLambdaParser.CallExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CallExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallExpr([NotNull] GpLambdaParser.CallExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpr([NotNull] GpLambdaParser.UnaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpr([NotNull] GpLambdaParser.UnaryExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>MultiplicativeExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpr([NotNull] GpLambdaParser.MultiplicativeExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MultiplicativeExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpr([NotNull] GpLambdaParser.MultiplicativeExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AdditiveExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpr([NotNull] GpLambdaParser.AdditiveExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AdditiveExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpr([NotNull] GpLambdaParser.AdditiveExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>RelationalExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpr([NotNull] GpLambdaParser.RelationalExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>RelationalExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpr([NotNull] GpLambdaParser.RelationalExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>EqualityExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpr([NotNull] GpLambdaParser.EqualityExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>EqualityExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpr([NotNull] GpLambdaParser.EqualityExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalAndExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalAndExpr([NotNull] GpLambdaParser.LogicalAndExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalAndExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalAndExpr([NotNull] GpLambdaParser.LogicalAndExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalOrExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOrExpr([NotNull] GpLambdaParser.LogicalOrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalOrExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOrExpr([NotNull] GpLambdaParser.LogicalOrExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LambdaExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaExpr([NotNull] GpLambdaParser.LambdaExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LambdaExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaExpr([NotNull] GpLambdaParser.LambdaExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>IntLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntLiteral([NotNull] GpLambdaParser.IntLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IntLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntLiteral([NotNull] GpLambdaParser.IntLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringLiteral([NotNull] GpLambdaParser.StringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringLiteral([NotNull] GpLambdaParser.StringLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>BoolLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolLiteral([NotNull] GpLambdaParser.BoolLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BoolLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolLiteral([NotNull] GpLambdaParser.BoolLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>VarExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarExpr([NotNull] GpLambdaParser.VarExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarExpr([NotNull] GpLambdaParser.VarExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenExpr([NotNull] GpLambdaParser.ParenExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenExpr([NotNull] GpLambdaParser.ParenExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] GpLambdaParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] GpLambdaParser.ProgramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] GpLambdaParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] GpLambdaParser.DeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDecl([NotNull] GpLambdaParser.FunctionDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDecl([NotNull] GpLambdaParser.FunctionDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamList([NotNull] GpLambdaParser.ParamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamList([NotNull] GpLambdaParser.ParamListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] GpLambdaParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] GpLambdaParser.ParamContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnType([NotNull] GpLambdaParser.ReturnTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnType([NotNull] GpLambdaParser.ReturnTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] GpLambdaParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] GpLambdaParser.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.typeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeList([NotNull] GpLambdaParser.TypeListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.typeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeList([NotNull] GpLambdaParser.TypeListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] GpLambdaParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] GpLambdaParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] GpLambdaParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] GpLambdaParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] GpLambdaParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] GpLambdaParser.VarDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStmt([NotNull] GpLambdaParser.AssignStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStmt([NotNull] GpLambdaParser.AssignStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] GpLambdaParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] GpLambdaParser.IfStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] GpLambdaParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] GpLambdaParser.ReturnStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.assertStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssertStmt([NotNull] GpLambdaParser.AssertStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.assertStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssertStmt([NotNull] GpLambdaParser.AssertStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.exprStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprStmt([NotNull] GpLambdaParser.ExprStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.exprStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprStmt([NotNull] GpLambdaParser.ExprStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] GpLambdaParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] GpLambdaParser.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary([NotNull] GpLambdaParser.PrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary([NotNull] GpLambdaParser.PrimaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgList([NotNull] GpLambdaParser.ArgListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgList([NotNull] GpLambdaParser.ArgListContext context);
}
} // namespace GpLambda.Compiler.Grammar
