//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /mnt/c/Users/ReinoutWijnholds/code/ryn-lang-v2/src/GpLambda.Compiler/Grammar/GpLambda.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace GpLambda.Compiler.Grammar {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGpLambdaListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class GpLambdaBaseListener : IGpLambdaListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveType</c>
	/// labeled alternative in <see cref="GpLambdaParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveType([NotNull] GpLambdaParser.PrimitiveTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveType</c>
	/// labeled alternative in <see cref="GpLambdaParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveType([NotNull] GpLambdaParser.PrimitiveTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionType</c>
	/// labeled alternative in <see cref="GpLambdaParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionType([NotNull] GpLambdaParser.FunctionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionType</c>
	/// labeled alternative in <see cref="GpLambdaParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionType([NotNull] GpLambdaParser.FunctionTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>PrimaryExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpr([NotNull] GpLambdaParser.PrimaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimaryExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpr([NotNull] GpLambdaParser.PrimaryExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>MethodCallExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCallExpr([NotNull] GpLambdaParser.MethodCallExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MethodCallExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCallExpr([NotNull] GpLambdaParser.MethodCallExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>CallExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallExpr([NotNull] GpLambdaParser.CallExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CallExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallExpr([NotNull] GpLambdaParser.CallExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] GpLambdaParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] GpLambdaParser.UnaryExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>MultiplicativeExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpr([NotNull] GpLambdaParser.MultiplicativeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MultiplicativeExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpr([NotNull] GpLambdaParser.MultiplicativeExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>AdditiveExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpr([NotNull] GpLambdaParser.AdditiveExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AdditiveExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpr([NotNull] GpLambdaParser.AdditiveExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>RelationalExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpr([NotNull] GpLambdaParser.RelationalExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RelationalExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpr([NotNull] GpLambdaParser.RelationalExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>EqualityExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpr([NotNull] GpLambdaParser.EqualityExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EqualityExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpr([NotNull] GpLambdaParser.EqualityExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalAndExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalAndExpr([NotNull] GpLambdaParser.LogicalAndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalAndExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalAndExpr([NotNull] GpLambdaParser.LogicalAndExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalOrExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOrExpr([NotNull] GpLambdaParser.LogicalOrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalOrExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOrExpr([NotNull] GpLambdaParser.LogicalOrExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>LambdaExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLambdaExpr([NotNull] GpLambdaParser.LambdaExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LambdaExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLambdaExpr([NotNull] GpLambdaParser.LambdaExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>IntLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntLiteral([NotNull] GpLambdaParser.IntLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IntLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntLiteral([NotNull] GpLambdaParser.IntLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringLiteral([NotNull] GpLambdaParser.StringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringLiteral([NotNull] GpLambdaParser.StringLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>BoolLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolLiteral([NotNull] GpLambdaParser.BoolLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BoolLiteral</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolLiteral([NotNull] GpLambdaParser.BoolLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>VarExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarExpr([NotNull] GpLambdaParser.VarExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarExpr([NotNull] GpLambdaParser.VarExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenExpr([NotNull] GpLambdaParser.ParenExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenExpr([NotNull] GpLambdaParser.ParenExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] GpLambdaParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] GpLambdaParser.ProgramContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] GpLambdaParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] GpLambdaParser.DeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDecl([NotNull] GpLambdaParser.FunctionDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDecl([NotNull] GpLambdaParser.FunctionDeclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamList([NotNull] GpLambdaParser.ParamListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamList([NotNull] GpLambdaParser.ParamListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] GpLambdaParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] GpLambdaParser.ParamContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnType([NotNull] GpLambdaParser.ReturnTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnType([NotNull] GpLambdaParser.ReturnTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] GpLambdaParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] GpLambdaParser.TypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeList([NotNull] GpLambdaParser.TypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeList([NotNull] GpLambdaParser.TypeListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] GpLambdaParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] GpLambdaParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] GpLambdaParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] GpLambdaParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] GpLambdaParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] GpLambdaParser.VarDeclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.assignStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStmt([NotNull] GpLambdaParser.AssignStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.assignStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStmt([NotNull] GpLambdaParser.AssignStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStmt([NotNull] GpLambdaParser.IfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStmt([NotNull] GpLambdaParser.IfStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] GpLambdaParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] GpLambdaParser.ReturnStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.assertStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssertStmt([NotNull] GpLambdaParser.AssertStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.assertStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssertStmt([NotNull] GpLambdaParser.AssertStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.exprStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprStmt([NotNull] GpLambdaParser.ExprStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.exprStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprStmt([NotNull] GpLambdaParser.ExprStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] GpLambdaParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] GpLambdaParser.ExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary([NotNull] GpLambdaParser.PrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary([NotNull] GpLambdaParser.PrimaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GpLambdaParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] GpLambdaParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GpLambdaParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] GpLambdaParser.ArgListContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace GpLambda.Compiler.Grammar
